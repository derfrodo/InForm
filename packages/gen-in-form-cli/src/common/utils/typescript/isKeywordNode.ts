import ts, { SyntaxKind } from "typescript";

export function isKeywordNode(
    type: ts.TypeNode
): type is ts.TypeNode & { kind: ts.KeywordSyntaxKind } {
    switch (type.kind) {
        case SyntaxKind.AbstractKeyword:
        case SyntaxKind.AnyKeyword:
        case SyntaxKind.AsKeyword:
        case SyntaxKind.AssertsKeyword:
        case SyntaxKind.AssertKeyword:
        case SyntaxKind.AsyncKeyword:
        case SyntaxKind.AwaitKeyword:
        case SyntaxKind.BigIntKeyword:
        case SyntaxKind.BooleanKeyword:
        case SyntaxKind.BreakKeyword:
        case SyntaxKind.CaseKeyword:
        case SyntaxKind.CatchKeyword:
        case SyntaxKind.ClassKeyword:
        case SyntaxKind.ConstKeyword:
        case SyntaxKind.ConstructorKeyword:
        case SyntaxKind.ContinueKeyword:
        case SyntaxKind.DebuggerKeyword:
        case SyntaxKind.DeclareKeyword:
        case SyntaxKind.DefaultKeyword:
        case SyntaxKind.DeleteKeyword:
        case SyntaxKind.DoKeyword:
        case SyntaxKind.ElseKeyword:
        case SyntaxKind.EnumKeyword:
        case SyntaxKind.ExportKeyword:
        case SyntaxKind.ExtendsKeyword:
        case SyntaxKind.FalseKeyword:
        case SyntaxKind.FinallyKeyword:
        case SyntaxKind.ForKeyword:
        case SyntaxKind.FromKeyword:
        case SyntaxKind.FunctionKeyword:
        case SyntaxKind.GetKeyword:
        case SyntaxKind.GlobalKeyword:
        case SyntaxKind.IfKeyword:
        case SyntaxKind.ImplementsKeyword:
        case SyntaxKind.ImportKeyword:
        case SyntaxKind.InferKeyword:
        case SyntaxKind.InKeyword:
        case SyntaxKind.InstanceOfKeyword:
        case SyntaxKind.InterfaceKeyword:
        case SyntaxKind.IntrinsicKeyword:
        case SyntaxKind.IsKeyword:
        case SyntaxKind.KeyOfKeyword:
        case SyntaxKind.LetKeyword:
        case SyntaxKind.ModuleKeyword:
        case SyntaxKind.NamespaceKeyword:
        case SyntaxKind.NeverKeyword:
        case SyntaxKind.NewKeyword:
        case SyntaxKind.NullKeyword:
        case SyntaxKind.NumberKeyword:
        case SyntaxKind.ObjectKeyword:
        case SyntaxKind.OfKeyword:
        case SyntaxKind.PackageKeyword:
        case SyntaxKind.PrivateKeyword:
        case SyntaxKind.ProtectedKeyword:
        case SyntaxKind.PublicKeyword:
        case SyntaxKind.ReadonlyKeyword:
        case SyntaxKind.OutKeyword:
        case SyntaxKind.OverrideKeyword:
        case SyntaxKind.RequireKeyword:
        case SyntaxKind.ReturnKeyword:
        case SyntaxKind.SetKeyword:
        case SyntaxKind.StaticKeyword:
        case SyntaxKind.StringKeyword:
        case SyntaxKind.SuperKeyword:
        case SyntaxKind.SwitchKeyword:
        case SyntaxKind.SymbolKeyword:
        case SyntaxKind.ThisKeyword:
        case SyntaxKind.ThrowKeyword:
        case SyntaxKind.TrueKeyword:
        case SyntaxKind.TryKeyword:
        case SyntaxKind.TypeKeyword:
        case SyntaxKind.TypeOfKeyword:
        case SyntaxKind.UndefinedKeyword:
        case SyntaxKind.UniqueKeyword:
        case SyntaxKind.UnknownKeyword:
        case SyntaxKind.VarKeyword:
        case SyntaxKind.VoidKeyword:
        case SyntaxKind.WhileKeyword:
        case SyntaxKind.WithKeyword:
        case SyntaxKind.YieldKeyword:
            return true;
        default:
            return false;
    }
}
